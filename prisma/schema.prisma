generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

model Stack {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  icon        String
  color       String
  description String
  url         String?
  order       Int?    @default(0)

  @@map("stacks")
}

model Social {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  icon     String
  color    String
  username String?
  url      String
  order    Int?    @default(0)

  @@map("socials")
}

model Image {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  url   String
  order Int?   @default(0)

  @@map("images")
}

model User {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  version       Int          @default(0) @map("__v")
  firstName     String
  lastName      String
  email         String       @unique
  role          String
  salt          String
  hash          String
  loginAttempts Int          @default(0)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  bio           String
  title         String
  location      String
  image         String?
  isAvailable   Boolean
  skills        Skill[]
  experiences   Experience[]
  educations    Education[]

  @@map("users")
}

model Skill {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  name   String
  userId String @map("user_id") @db.ObjectId
  User   User   @relation(fields: [userId], references: [id])

  @@map("skills")
}

model Experience {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  title       String
  location    String
  startDate   DateTime
  endDate     DateTime?
  description String?
  logo        String?
  userId      String    @map("user_id") @db.ObjectId
  user        User      @relation(fields: [userId], references: [id])

  @@map("experiences")
}

model Education {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  department  String
  location    String
  startDate   DateTime
  endDate     DateTime
  description String?
  logo        String?
  userId      String   @map("user_id") @db.ObjectId
  user        User     @relation(fields: [userId], references: [id])

  @@map("educations")
}

model Project {
  id                String          @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  description       String?
  slug              String          @unique
  image             String?
  content           String?
  order             Int?            @default(0)
  projectCategoryId String          @map("projectCategory_id") @db.ObjectId
  projectCategory   ProjectCategory @relation(fields: [projectCategoryId], references: [id])

  @@map("projects")
}

model ProjectCategory {
  id      String    @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  project Project[]

  @@map("projectCategories")
}
